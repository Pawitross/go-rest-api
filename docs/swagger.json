{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/books": {
            "get": {
                "description": "Responds with a list of all books as JSON. Optional filtering and pagination is available through parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get a list of all books",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Book id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Book title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Year of publishing of the book",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of pages in the book",
                        "name": "pages",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Author id",
                        "name": "author",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Genre id",
                        "name": "genre",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Language id",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit returned number of resources",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset returned resources",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Fetched books",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Book"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Accepts a JSON body to create a new book. Responds with the created book and set Location header or an error message.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "New Book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created - Added new book",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        },
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "Path of the newly created book"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input or JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Responds with the queried book as JSON or an error message.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Get one book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK - Fetched book",
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid book id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Accepts a JSON body to update a book. Responds with a status code. When an error occurs the response body contains JSON data with the message.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Update an existing book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Existing Book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated Book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Updated the book"
                    },
                    "400": {
                        "description": "Bad Request - Invalid input or JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict -  No resource found or didn't change resource",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Responds with a status code. When an error occurs the response body contains an error message.",
                "tags": [
                    "Books"
                ],
                "summary": "Delete an existing book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content - Successfully deleted the book"
                    },
                    "400": {
                        "description": "Bad Request - Invalid book id",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Accepts a JSON body with patch data to a book. Responds with a status code. When an error occurs the response body contains JSON data with the message.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "Patch an existing book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Existing Book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patches to the book",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Book"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content - Successfully patched the book"
                    },
                    "400": {
                        "description": "Bad Request - Invalid input or JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not found -  No resource found or didn't change resource",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "integer"
                },
                "genre": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "language": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}